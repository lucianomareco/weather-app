{"version":3,"sources":["component/WeatherForm.js","component/WeatherInfo.js","App.js","reportWebVitals.js","index.js","keys.js"],"names":["WeatherForm","props","className","onSubmit","GetWeather","type","name","placeholder","autoFocus","WeatherInfo","error","temperature","city","country","humidity","description","wind_speed","App","state","e","a","preventDefault","target","elements","cityValue","value","countryValue","API_URL","WEATHER_KEY","fetch","response","json","data","console","log","setState","main","temp","weather","wind","speed","sys","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"8OAkBeA,EAhBK,SAAAC,GAChB,OACI,qBAAKC,UAAU,iBAAf,SACI,uBAAMC,SAAUF,EAAMG,WAAtB,UACI,qBAAKF,UAAU,aAAf,SACI,uBAAOG,KAAK,OAAOC,KAAK,OAAOC,YAAY,iBAAiBL,UAAU,eAAeM,WAAS,MAElG,qBAAKN,UAAU,aAAf,SACI,uBAAOG,KAAK,OAAOC,KAAK,UAAUC,YAAY,oBAAoBL,UAAU,eAAeM,WAAS,MAExG,wBAAQN,UAAU,4BAAlB,+BCiBDO,EA3BK,SAACR,GACjB,OAEI,gCAEQA,EAAMS,OACN,qBAAKR,UAAU,qBAAf,SACI,4BAAID,EAAMS,UAGjBT,EAAMU,YACH,sBAAKT,UAAU,iBAAf,UACI,4CAAeD,EAAMW,KAArB,KAA6BX,EAAMY,QAAnC,OACA,+CAAkBZ,EAAMU,YAAxB,aACA,4CAAeV,EAAMa,SAArB,OACA,+CAAkBb,EAAMc,YAAxB,OACA,8CAAiBd,EAAMe,WAAvB,UAGJ,qBAAKd,UAAU,iBAAf,SACI,qD,OCmCLe,E,4MAlDbC,MAAQ,CACNP,YAAa,GACbI,YAAa,GACbD,SAAU,GACVE,WAAY,GACZJ,KAAM,GACNC,QAAS,GACTH,MAAO,M,EAITN,W,uCAAa,WAAMe,GAAN,6BAAAC,EAAA,yDACXD,EAAEE,iBADS,EAEeF,EAAEG,OAAOC,SAA3BX,EAFG,EAEHA,KAAMC,EAFH,EAEGA,QAERW,EAAYZ,EAAKa,MACjBC,EAAeb,EAAQY,OAEzBD,IAAaE,EAPN,wBAQHC,EARG,4DAQ4DH,EAR5D,YAQyEE,EARzE,kBAQ+FE,cAR/F,0BAScC,MAAMF,GATpB,cASHG,EATG,iBAUUA,EAASC,OAVnB,QAUHC,EAVG,OAWTC,QAAQC,IAAI,EAAKhB,OAEjB,EAAKiB,SAAS,CACZxB,YAAaqB,EAAKI,KAAKC,KACvBtB,YAAaiB,EAAKM,QAAQ,GAAGvB,YAC7BD,SAAUkB,EAAKI,KAAKtB,SACpBE,WAAYgB,EAAKO,KAAKC,MACtB5B,KAAMoB,EAAK1B,KACXO,QAASmB,EAAKS,IAAI5B,QAClBH,MAAO,OApBA,wBAsBF,EAAKyB,SAAS,CAAEzB,MAAO,oCAtBrB,4C,kGAyBb,WACE,OACE,qBAAKR,UAAU,gBAAf,SACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,cAAC,EAAD,CAAaE,WAAYsC,KAAKtC,aAC9B,cAAC,EAAD,eAAiBsC,KAAKxB,mB,GA5ChByB,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,gBChBAc,EAAOC,QAAU,CACb/B,YAAY,sC","file":"static/js/main.5038f351.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst WeatherForm = props => {\r\n    return (\r\n        <div className=\"card card-body\">\r\n            <form onSubmit={props.GetWeather} >\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" name=\"city\" placeholder=\"Your city name\" className=\"form-control\" autoFocus />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" name=\"country\" placeholder=\"Your country name\" className=\"form-control\" autoFocus />\r\n                </div>\r\n                <button className=\"btn btn-success btn-block\">Get Weather</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeatherForm;","import React from \"react\";\r\n\r\nconst WeatherInfo = (props) => {\r\n    return (\r\n\r\n        <div>\r\n            {\r\n                props.error &&\r\n                <div className=\"alert alert-danger\">\r\n                    <p>{props.error}</p>\r\n                </div>\r\n            }\r\n            {props.temperature ?\r\n                <div className=\"card card-body\">\r\n                    <p> Location: {props.city}, {props.country} </p>\r\n                    <p> Temperature: {props.temperature} Â°C </p>\r\n                    <p> Humidity: {props.humidity} </p>\r\n                    <p> Description: {props.description} </p>\r\n                    <p> Wind speed: {props.wind_speed} </p>\r\n                </div>\r\n                :\r\n                <div className=\"card card-body\">\r\n                    <p>No request yet</p>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeatherInfo;","import React, { Component } from \"react\";\nimport WeatherForm from \"./component/WeatherForm\";\nimport WeatherInfo from \"./component/WeatherInfo\";\nimport { WEATHER_KEY } from \"./keys\";\n\nclass App extends Component {\n\n  state = {\n    temperature: '',\n    description: '',\n    humidity: '',\n    wind_speed: '',\n    city: '',\n    country: '',\n    error: null\n  }\n\n\n  GetWeather = async e => {\n    e.preventDefault();\n    const { city, country } = e.target.elements;\n\n    const cityValue = city.value;\n    const countryValue = country.value;\n\n    if (cityValue && countryValue) {\n      const API_URL = `https://api.openweathermap.org/data/2.5/weather?q=${cityValue},${countryValue}&appid=${WEATHER_KEY}&units=metric`;\n      const response = await fetch(API_URL);\n      const data = await response.json();\n      console.log(this.state);\n\n      this.setState({\n        temperature: data.main.temp,\n        description: data.weather[0].description,\n        humidity: data.main.humidity,\n        wind_speed: data.wind.speed,\n        city: data.name,\n        country: data.sys.country,\n        error: null\n      });\n    } else { this.setState({ error: 'Please enter a city and country' }) }\n  }\n\n  render() {\n    return (\n      <div className=\"container p-4\">\n        <div className=\"row\">\n          <div className=\"col-md-6 mx-auto\">\n            <WeatherForm GetWeather={this.GetWeather} />\n            <WeatherInfo {...this.state} />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = {\r\n    WEATHER_KEY: `4a02920b431f75112cd6a435e129001b`\r\n}"],"sourceRoot":""}